name: Build and Upload

on:
  workflow_dispatch:
    inputs:
      isPrerelease:
        description: "Is this a pre-release?"
        required: true
        default: false
        type: boolean

jobs:
  build-and-upload:
    runs-on:
      ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Grab Release Version
        uses: BrycensRanch/read-properties-action@v1
        id: version
        with:
          file: gradle.properties
          property: mod_version
          default: 0.0.0

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'Changelogs/${{ steps.version.outputs.mod_version }}.txt'

      - name: Stop if file does not exist
        if: steps.check_files.outputs.files_exists == 'false'
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Changelog not found!')

      - name: Install Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 #

      - name: Build the Mod
        run: |
          ./gradlew build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Mod-Build
          path: build/libs/
          if-no-files-found: error

      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ steps.version.outputs.mod_version }}
          release_name: ${{ steps.version.outputs.mod_version }}
          prerelease: ${{ github.event.inputs.isPrerelease }}
          body_path: 'Changelogs/${{ steps.version.outputs.mod_version }}.txt'

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: Mod-Build
          path: build

      - name: Zip Build Artifact
        run: |
          cd build/libs
          zip -r Build.zip *

      - name: Upload Release Files
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/Build.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip
